<div class="container my-5">

  <!-- Account Information Card -->
  <div class="card mb-4 shadow-sm">
    <div class="card-header bg-custom-dark text-white">
      <h3 class="mb-0">Your Account</h3>
    </div>
    <div class="card-body">
      <div class="row mb-3">
        <div class="col-md-6">
          <label class="form-label">First Name</label>
          <input type="text" class="form-control" value="<%= @user.first_name %>" readonly>
        </div>
        <div class="col-md-6">
          <label class="form-label">Last Name</label>
          <input type="text" class="form-control" value="<%= @user.last_name %>" readonly>
        </div>
      </div>
      <div class="mb-3">
        <label class="form-label">Email</label>
        <input type="email" class="form-control" value="<%= @user.email %>" readonly>
      </div>
      <div class="form-check form-switch mb-4">
        <input type="checkbox" class="form-check-input" id="emailNotifications" <%= @user.email_notifications_enabled ? 'checked' : '' %> disabled>
        <label class="form-check-label fs-5" for="emailNotifications">Receive Email Notifications</label>
        <div>
          <small class="form-text text-muted">When enabled, you'll receive emails about flagged conversations and other important updates.</small>
        </div>
      </div>
      <div class="text-end">
        <%= link_to 'Edit Account Info', edit_user_registration_path, class: 'btn btn-outline-secondary' %>
      </div>
    </div>
  </div>

  <!-- Subscription Section -->
  <% if @user.subscription_status == 'incomplete' %>
    <!-- No subscription exists yet. Show plan options and a link to proceed to payment. -->
    <div class="card shadow-sm">
      <div class="card-header bg-custom-dark text-white">
        <h3 class="mb-0">Subscribe Now</h3>
      </div>
      <div class="card-body">
        <div id="plan-options" class="d-flex flex-wrap gap-4 justify-content-center">
          <% plans = {
               ENV['STRIPE_PRICE_TEST_ID'] => {
                 name: "Test",
                 tagline: "Perfect for testing and evaluation",
                 price: "$0.1/month",
                 queries: "Full access to all features",
                 icon: "ðŸ§ª",
                 features: [
                   "24/7 AI support for customers",
                   "OpenAI powered responses",
                   "Full brand customisation",
                   "No code install",
                   "Conversation history",
                   "Flagged for review dashboard",
                   "Priority support",
                   "Early access to new features"
                 ],
                 disabled_features: []
               },
               ENV['STRIPE_PRICE_BASIC_ID'] => {
                 name: "Basic",
                 tagline: "For side hustlers and solo stores",
                 price: "$129/month",
                 queries: "Up to 1000 queries/month",
                 icon: "ðŸ’¼",
                 features: [
                   "24/7 AI support for customers",
                   "OpenAI powered responses",
                   "Full brand customisation",
                   "No code install",
                   "Conversation history",
                   "Flagged for review dashboard"
                 ],
                 disabled_features: [
                   "Priority support",
                   "Early access to new features"
                 ]
               },
               ENV['STRIPE_PRICE_STANDARD_ID'] => {
                 name: "Standard",
                 tagline: "For growing ecommerce brands",
                 price: "$299/month",
                 queries: "Up to 5000 queries/month",
                 icon: "ðŸš€",
                 features: [
                   "24/7 AI support for customers",
                   "OpenAI powered responses",
                   "Full brand customisation",
                   "No code install",
                   "Conversation history",
                   "Flagged for review dashboard",
                   "Priority support",
                   "Early access to new features"
                 ],
                 disabled_features: []
               },
               ENV['STRIPE_PRICE_PRO_ID'] => {
                 name: "Pro",
                 tagline: "For high-volume stores and teams",
                 price: "$499/month",
                 queries: "Up to 10,000 queries/month",
                 icon: "ðŸ“ˆ",
                 features: [
                   "24/7 AI support for customers",
                   "OpenAI powered responses",
                   "Full brand customisation",
                   "No code install",
                   "Conversation history",
                   "Flagged for review dashboard",
                   "Priority support",
                   "Early access to new features"
                 ],
                 disabled_features: []
               }
             } %>
          
          <% plans.each do |price_id, details| %>
            <div class="plan-card card <%= 'most-popular' if details[:name] == 'Standard' %>" 
                 data-plan-id="<%= price_id %>" 
                 style="cursor: pointer; width: 20rem; transition: all 0.3s ease;">
              <% if details[:name] == 'Standard' %>
                <div class="most-popular-badge">
                  Most Popular
                </div>
              <% end %>
              <div class="card-body p-4">
                <div class="text-center mb-4">
                  <div class="display-5 mb-2"><%= details[:icon] %></div>
                  <h3 class="card-title mb-2"><%= details[:name] %></h3>
                  <p class="text-muted mb-3"><%= details[:tagline] %></p>
                  <h4 class="pricing mb-3"><%= details[:price] %></h4>
                  <p class="fw-medium text-decoration-underline"><%= details[:queries] %></p>
                </div>

                <ul class="list-unstyled">
                  <% details[:features].each do |feature| %>
                    <li class="mb-2">
                      <i class="fas fa-check text-success me-2"></i>
                      <%= feature %>
                    </li>
                  <% end %>
                  <% details[:disabled_features].each do |feature| %>
                    <li class="mb-2 text-muted">
                      <i class="fas fa-times text-danger me-2"></i>
                      <%= feature %>
                    </li>
                  <% end %>
                </ul>
              </div>
            </div>
          <% end %>
        </div>

        <div class="mt-4">
          <button id="proceed-to-payment" class="btn btn-outline-secondary btn-lg d-block mx-auto" disabled>
            Proceed to Payment
          </button>
        </div>
      </div>
    </div>
  <% else %>
    <!-- Subscription exists (active, canceled, etc.): show subscription details -->
    <div class="card shadow-sm">
      <div class="card-header bg-custom-dark text-white">
        <h3 class="mb-0">Your Subscription</h3>
      </div>
      <div class="card-body">
        <% if @scheduled_downgrade_price_id.present? %>
          <div class="alert alert-info text-center mb-3">
            You are scheduled to downgrade to <strong><%= get_plan_name(@scheduled_downgrade_price_id) %></strong>
            at the end of your current billing period on <strong><%= @scheduled_downgrade_date %></strong>.
          </div>
        <% end %>
        <div class="row align-items-center">
          <div class="col-md-8">
            <div class="d-flex flex-column flex-md-row gap-2 mb-3">
              <div class="d-flex align-items-center">
                <% if @user.subscription_status.capitalize == 'Active' %>
                  <i class="fas fa-check-circle text-success me-2"></i>
                  <span class="badge bg-success rounded-pill fs-6 px-3 py-2">
                    <%= @user.subscription_status.capitalize %>
                  </span>
                <% else %>
                  <i class="fas fa-times-circle text-danger me-2"></i>
                  <span class="badge bg-danger rounded-pill fs-6 px-3 py-2">
                    <%= @user.subscription_status.capitalize %>
                  </span>
                <% end %>
              </div>
            </div>
            <div class="d-flex align-items-center mb-3">
              <i class="fas fa-question-circle text-custom-dark me-2"></i>
              <span class="badge bg-custom-dark rounded-pill fs-6 px-3 py-2">
                Queries Remaining: <%= @user.queries_remaining || 0 %> / <%= @query_limit %>
              </span>
            </div>
          </div>
          <div class="col-md-4 text-md-end">
            <%= link_to billing_portal_path, class: 'btn btn-outline-secondary w-60 w-md-auto' do %>
              <i class="fas fa-cog me-2"></i>Manage Subscription
            <% end %>
          </div>
        </div>
      </div>
    </div>
  <% end %>
</div>

<style>
  :root {
    --bs-custom-dark: #212529;
    --bs-custom-dark-rgb: 33, 37, 41;
    --bs-grey: #6c757d;
  }

  /* Standard Button Styles */
  .btn-outline-secondary {
    color: var(--bs-grey);
    border-color: var(--bs-grey);
    background-color: white;
    transition: all 0.3s ease;
  }

  .btn-outline-secondary:hover {
    color: white;
    background-color: var(--bs-grey);
    border-color: var(--bs-grey);
  }

  .btn-outline-secondary:focus {
    box-shadow: 0 0 0 0.25rem rgba(108, 117, 125, 0.25);
  }

  /* Make all outline button variants follow the same hover pattern */
  .btn-outline-primary,
  .btn-outline-success,
  .btn-outline-danger,
  .btn-outline-warning,
  .btn-outline-info,
  .btn-outline-dark {
    background-color: white;
    transition: all 0.3s ease;
  }

  .btn-outline-primary:hover,
  .btn-outline-success:hover,
  .btn-outline-danger:hover,
  .btn-outline-warning:hover,
  .btn-outline-info:hover,
  .btn-outline-dark:hover {
    color: white;
  }

  /* Override Bootstrap's bg-dark to match our custom color */
  .bg-dark {
    background-color: var(--bs-custom-dark) !important;
  }

  .bg-custom-dark {
    background-color: var(--bs-custom-dark) !important;
  }

  /* Style for dark buttons */
  .btn.bg-custom-dark {
    border-color: var(--bs-custom-dark);
  }

  .btn.bg-custom-dark:hover:not(:disabled) {
    background-color: #1a1e21 !important;
    border-color: #1a1e21;
  }

  .btn.bg-custom-dark:disabled {
    opacity: 0.65;
    cursor: not-allowed;
  }

  /* Custom Styles for Back Button */
  #back-button {
    transition: background-color 0.3s, color 0.3s;
  }

  #back-button:hover {
    background-color: var(--bs-grey);
    color: white;
  }

  /* Custom Styles for Input Groups */
  .input-group-text {
    background-color: #f8f9fa;
    border-right: none;
  }

  .form-control {
    border-left: none;
  }

  .plan-card {
    border: 2px solid transparent;
    transition: transform 0.3s ease, border-color 0.3s ease, box-shadow 0.3s ease;
  }

  .plan-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 20px rgba(0,0,0,0.1);
  }

  .plan-card.selected {
    border-color: var(--bs-grey);
    box-shadow: 0 10px 20px rgba(0,0,0,0.1);
  }

  .most-popular {
    position: relative;
  }

  .most-popular-badge {
    position: absolute;
    top: -12px;
    left: 50%;
    transform: translateX(-50%);
    background-color: var(--bs-grey);
    color: white;
    padding: 4px 16px;
    border-radius: 6px;
    font-weight: 500;
    z-index: 1;
  }

  .pricing {
    font-size: 1.75rem;
    font-weight: bold;
    color: var(--bs-grey);
  }
</style>

<%# Include Stripe.js and JavaScript for Plan Selection %>
<script src="https://js.stripe.com/v3/"></script>
<script>
  document.addEventListener('DOMContentLoaded', function() {
    const csrfToken = document.querySelector('meta[name="csrf-token"]').getAttribute('content');
    const planCards = document.querySelectorAll('.plan-card');
    let selectedPlanId = null;
    const proceedButton = document.getElementById('proceed-to-payment');

    // Remove the 'selected' highlight from all plan cards
    const removeHighlights = () => {
      planCards.forEach(card => {
        card.classList.remove('selected');
      });
    };

    // Add click event on each plan card
    planCards.forEach(card => {
      card.addEventListener('click', function() {
        removeHighlights();
        card.classList.add('selected'); // Apply the thicker outline
        selectedPlanId = card.getAttribute('data-plan-id');
        proceedButton.disabled = false;
      });
    });

    // When the Proceed button is clicked, pass the selected plan id to the backend
    proceedButton.addEventListener('click', function() {
      if (!selectedPlanId) {
        alert('Please select a plan.');
        return;
      }
      fetch('<%= create_checkout_session_path %>', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Accept': 'application/json',
          'X-CSRF-Token': csrfToken  // Include the CSRF token in your header
        },
        body: JSON.stringify({ price_id: selectedPlanId })
      })
      .then(response => response.json())
      .then(data => {
        if (data.error) {
          alert("Error: " + data.error);
        } else {
          var stripe = Stripe('<%= ENV["STRIPE_PUBLIC_KEY"] %>');
          stripe.redirectToCheckout({ sessionId: data.id });
        }
      })
      .catch(error => console.error('Error fetching checkout session:', error));
    });
  });
</script>